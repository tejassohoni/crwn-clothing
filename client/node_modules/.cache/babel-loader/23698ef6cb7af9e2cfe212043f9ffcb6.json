{"ast":null,"code":"import _objectSpread from\"D:\\\\reactjs\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import CartActionTypes from\"./cart.types\";import{addItemToCart,removeItemFromCart}from\"./cart.utils\";var INITIAL_STATE={hidden:true,cartItems:[]};var cartReducer=function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CartActionTypes.TOGGLE_CART_HIDDEN:return _objectSpread({},state,{hidden:!state.hidden});case CartActionTypes.ADD_ITEM:return _objectSpread({},state,{cartItems:addItemToCart(state.cartItems,action.payload)});case CartActionTypes.REMOVE_ITEM:return _objectSpread({},state,{cartItems:removeItemFromCart(state.cartItems,action.payload)});case CartActionTypes.CLEAR_ITEM_FROM_CART:return _objectSpread({},state,{cartItems:state.cartItems.filter(function(cartItem){return cartItem.id!==action.payload.id;})});default:return state;}};export default cartReducer;","map":{"version":3,"sources":["D:/reactjs/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id"],"mappings":"+GAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAASC,aAAT,CAAwBC,kBAAxB,KAAkD,cAAlD,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,MAAM,CAAE,IADY,CAEpBC,SAAS,CAAE,EAFS,CAAtB,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BJ,aAA0B,IAAXK,CAAAA,MAAW,2CACrD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKT,CAAAA,eAAe,CAACU,kBAArB,CACE,wBACKH,KADL,EAEEH,MAAM,CAAE,CAACG,KAAK,CAACH,MAFjB,GAIF,IAAKJ,CAAAA,eAAe,CAACW,QAArB,CACE,wBACKJ,KADL,EAEEF,SAAS,CAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,CAAkBG,MAAM,CAACI,OAAzB,CAF1B,GAIF,IAAKZ,CAAAA,eAAe,CAACa,WAArB,CACE,wBACKN,KADL,EAEEF,SAAS,CAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,CAAkBG,MAAM,CAACI,OAAzB,CAF/B,GAIF,IAAKZ,CAAAA,eAAe,CAACc,oBAArB,CACE,wBACKP,KADL,EAEEF,SAAS,CAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CACT,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,EAAT,GAAgBT,MAAM,CAACI,OAAP,CAAeK,EAA7C,EADS,CAFb,GAMF,QACE,MAAOV,CAAAA,KAAP,CAxBJ,CA0BD,CA3BD,CA6BA,cAAeD,CAAAA,WAAf","sourcesContent":["import CartActionTypes from \"./cart.types\";\r\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\r\n\r\nconst INITIAL_STATE = {\r\n  hidden: true,\r\n  cartItems: [],\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n      return {\r\n        ...state,\r\n        hidden: !state.hidden,\r\n      };\r\n    case CartActionTypes.ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: addItemToCart(state.cartItems, action.payload),\r\n      };\r\n    case CartActionTypes.REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: removeItemFromCart(state.cartItems, action.payload),\r\n      };\r\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (cartItem) => cartItem.id !== action.payload.id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}